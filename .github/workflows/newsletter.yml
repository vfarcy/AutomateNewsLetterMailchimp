name: Envoyer la Newsletter et Déployer le Site

# Se déclenche quand un fichier .md est modifié ou ajouté dans le dossier _posts
on:
  push:
    branches:
      - main
    paths:
      - '_posts/**.md'
  # Permet de lancer ce workflow manuellement depuis l'onglet Actions
  workflow_dispatch:

# --- NOUVEAU : On ajoute des permissions pour le déploiement sur GitHub Pages ---
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  # TÂCHE 1 : PRÉPARER ET ENVOYER LA NEWSLETTER PAR E-MAIL (ne change pas)
  send_email_newsletter:
    # On renomme le job pour plus de clarté
    name: 1. Envoyer l'e-mail (Mailchimp)
    runs-on: ubuntu-latest
    outputs:
      campaign_id: ${{ steps.create_campaign.outputs.campaign_id }}
      skipped: ${{ steps.create_campaign.outputs.skipped }}
    steps:
      # Toutes les étapes pour Mailchimp restent exactement les mêmes...
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests markdown beautifulsoup4
      - name: Create Campaign and Add Content
        id: create_campaign
        # ... (votre étape complète Create Campaign and Add Content va ici) ...
      - name: Send Test Email
        if: steps.create_campaign.outputs.skipped != 'true'
        # ... (votre étape complète Send Test Email va ici) ...

  # TÂCHE 2 : GÉRER L'APPROBATION ET L'ENVOI FINAL (ne change pas)
  send_to_production:
    name: 2. Approbation et Envoi Final (Mailchimp)
    needs: send_email_newsletter
    if: needs.send_email_newsletter.outputs.skipped != 'true'
    environment: Production
    runs-on: ubuntu-latest
    steps:
      # Les étapes Send Final Campaign et Cleanup on Rejection restent les mêmes...
      - name: Send Final Campaign
        # ... (votre étape complète Send Final Campaign va ici) ...
      - name: Cleanup Campaign on Rejection
        if: cancelled()
        # ... (votre étape complète Cleanup Campaign on Rejection va ici) ...

  # --- NOUVEAU : TÂCHE 3, DÉPLOYER LE SITE WEB STATIQUE ---
  deploy_site:
    # Ce job s'exécute en parallèle des jobs d'e-mail
    name: 3. Déployer le Site (GitHub Pages)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        # Cette action utilise le builder natif de GitHub pour Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        # L'artefact est le site statique généré
        uses: actions/upload-pages-artifact@v3

  # --- NOUVEAU : TÂCHE 4, FINALISER LE DÉPLOIEMENT DU SITE ---
  deployment:
    name: 4. Finaliser le Déploiement du Site
    runs-on: ubuntu-latest
    # Ce job ne démarre que si la construction du site a réussi
    needs: deploy_site
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

        
